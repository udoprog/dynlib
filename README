I needed this type of library for a parser I was writing.
Focus is on:
  - Memory detention, 0% memory loss (since all objects are allocated in the same space).
  - Simple, yet dynamic allocation.

Example:

#include "dyn/store.h"

int main()
{
  dstore ds;
  ds_init(&ds);
  
  char *s = ds_get(&ds, 100);
  
  strcpy(s, "this is a test string");
  
  ds_free(&ds); // the string is freed here.
  
  dstore ds2;
  dstream dss;

  ds_init(&ds2);
  dss_init(&ds2, &dss);
  dss_write(&dss, "test1", 5);
  dss_write(&dss, "test2", 5);
  dss_write(&dss, "test3", 5);
  
  // must close
  char *final_string = dss_close(&dss);
  
  printf("final_string = %s\n", final_string);
  
  ds_free(&ds2); // final_string is release here
}
